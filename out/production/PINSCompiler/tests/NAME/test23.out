defs [5:1-87:47]
  typedef [5:1-5:15]: x
    atom [5:8-5:15]: int
  typedef [6:1-6:14]: y
    atom [6:8-6:14]: str
  typedef [7:1-7:15]: z
    atom [7:8-7:15]: log
  typedef [8:1-8:17]: i
    typename [8:8-8:17]: blablabla
      # defined at: [10:1-10:23]
  typedef [9:1-9:41]: j
    array [9:8-9:41]
      [10]
      array [9:16-9:41]
        [15]
        array [9:24-9:41]
          [20]
          typename [9:32-9:41]: blablabla
            # defined at: [10:1-10:23]
  typedef [10:1-10:23]: blablabla
    atom [10:16-10:23]: int
  typedef [11:1-11:22]: blabla
    typename [11:13-11:22]: blablabla
      # defined at: [10:1-10:23]
  typedef [12:1-12:18]: void
    atom [12:11-12:18]: log
  vardef [15:1-15:14]: k
    atom [15:8-15:14]: str
  vardef [15:16-15:30]: l
    atom [15:23-15:30]: int
  vardef [15:32-15:46]: q
    atom [15:39-15:46]: log
  vardef [15:48-15:61]: m
    typename [15:55-15:61]: blabla
      # defined at: [11:1-11:22]
  vardef [15:63-15:94]: n
    array [15:70-15:94]
      [69]
      array [15:78-15:94]
        [420]
        atom [15:88-15:94]: str
  fundef [19:1-57:2]: firstfunction
    parameter [19:19-19:29]: x
      atom [19:22-19:29]: int
    parameter [19:31-19:40]: y
      atom [19:34-19:40]: str
    parameter [19:42-19:52]: z
      atom [19:45-19:52]: log
    parameter [19:54-19:80]: n
      array [19:57-19:80]
        [69]
        array [19:65-19:80]
          [420]
          atom [19:74-19:80]: str
    atom [19:83-19:90]: int
    where [20:5-57:2]
      defs [55:9-56:86]
        vardef [55:9-55:22]: i
          atom [55:15-55:22]: int
        vardef [55:24-55:38]: a
          atom [55:31-55:38]: log
        vardef [55:40-55:54]: j
          atom [55:47-55:54]: int
        fundef [55:56-56:86]: secondfunction
          parameter [55:75-55:85]: x
            atom [55:78-55:85]: int
          atom [55:87-55:94]: int
          where [55:97-56:86]
            defs [56:1-56:85]
              fundef [56:1-56:85]: thirdfunction
                parameter [56:19-56:28]: y
                  atom [56:22-56:28]: str
                array [56:30-56:44]
                  [10]
                  atom [56:38-56:44]: str
                where [56:47-56:85]
                  defs [56:68-56:84]
                    vardef [56:68-56:84]: xyz
                      atom [56:77-56:84]: int
                  block [56:47-56:60]
                    binary [56:48-56:59]: assign
                      binary [56:49-56:54]: mul
                        literal [56:49-56:51]: int(10)
                        literal [56:52-56:54]: int(20)
                      name [56:55-56:58]: xyz
                        # defined at: [56:68-56:84]
            binary [55:97-55:116]: or
              binary [55:97-55:102]: add
                literal [55:97-55:99]: int(10)
                literal [55:100-55:102]: int(20)
              binary [55:103-55:116]: and
                binary [55:103-55:108]: sub
                  literal [55:103-55:105]: int(30)
                  literal [55:106-55:108]: int(40)
                binary [55:109-55:116]: eq
                  literal [55:109-55:112]: int(123)
                  literal [55:114-55:116]: int(20)
      block [20:5-54:6]
        for [20:7-29:15]
          name [20:12-20:13]: i
            # defined at: [55:9-55:22]
          literal [20:16-20:17]: int(1)
          binary [20:19-20:27]: leq
            name [20:19-20:20]: i
              # defined at: [55:9-55:22]
            literal [20:24-20:27]: int(100)
          binary [20:29-20:40]: assign
            name [20:30-20:31]: i
              # defined at: [55:9-55:22]
            binary [20:34-20:39]: add
              name [20:34-20:35]: i
                # defined at: [55:9-55:22]
              literal [20:38-20:39]: int(1)
          while [21:9-29:10]
            binary [22:19-22:28]: gt
              name [22:19-22:20]: j
                # defined at: [55:40-55:54]
              block [22:23-22:28]
                unary [22:24-22:27]: sub
                  literal [22:25-22:27]: int(10)
            ifthenelse [22:30-27:14]
              binary [23:20-23:86]: neq
                binary [23:20-23:79]: sub
                  binary [23:20-23:60]: sub
                    binary [23:20-23:44]: add
                      binary [23:20-23:39]: add
                        binary [23:20-23:34]: add
                          binary [23:20-23:29]: mul
                            name [23:20-23:21]: j
                              # defined at: [55:40-55:54]
                            block [23:24-23:29]
                              unary [23:25-23:28]: sub
                                literal [23:26-23:28]: int(10)
                          literal [23:32-23:34]: int(20)
                        literal [23:37-23:39]: int(30)
                      literal [23:42-23:44]: int(10)
                    binary [23:47-23:60]: mod
                      binary [23:47-23:54]: div
                        literal [23:47-23:49]: int(40)
                        literal [23:52-23:54]: int(50)
                      literal [23:57-23:60]: int(100)
                  block [23:62-23:79]
                    unary [23:63-23:78]: sub
                      block [23:64-23:78]
                        unary [23:65-23:77]: sub
                          block [23:66-23:77]
                            unary [23:67-23:76]: sub
                              block [23:68-23:76]
                                unary [23:69-23:75]: sub
                                  block [23:70-23:75]
                                    unary [23:71-23:74]: add
                                      literal [23:72-23:74]: int(10)
                literal [23:83-23:86]: int(123)
              literal [24:21-24:23]: int(12)
              call [26:21-26:51]: firstfunction
                # defined at: [19:1-57:2]
                literal [26:35-26:38]: int(123)
                unary [26:40-26:44]: sub
                  literal [26:41-26:44]: int(234)
                unary [26:46-26:50]: add
                  literal [26:47-26:50]: int(456)
        binary [31:9-35:75]: or
          binary [31:9-34:51]: or
            binary [31:9-34:39]: or
              binary [31:9-34:28]: or
                binary [31:9-34:18]: or
                  binary [31:9-33:97]: or
                    binary [31:9-31:53]: or
                      binary [31:9-31:26]: or
                        binary [31:9-31:21]: and
                          literal [31:9-31:13]: log(true)
                          literal [31:16-31:21]: log(false)
                        literal [31:24-31:26]: int(10)
                      binary [31:29-31:53]: and
                        literal [31:29-31:49]: str(danes je lep dan')
                        name [31:52-31:53]: i
                          # defined at: [55:9-55:22]
                    binary [31:56-33:97]: geq
                      call [31:56-31:80]: firstfunction
                        # defined at: [19:1-57:2]
                        name [31:70-31:71]: i
                          # defined at: [55:9-55:22]
                        binary [31:73-31:79]: add
                          name [31:73-31:74]: x
                            # defined at: [19:19-19:29]
                          literal [31:77-31:79]: int(10)
                      binary [33:9-33:97]: add
                        binary [33:9-33:68]: sub
                          binary [33:9-33:59]: sub
                            binary [33:9-33:26]: sub
                              unary [33:9-33:12]: add
                                literal [33:10-33:12]: int(10)
                              binary [33:15-33:26]: mul
                                unary [33:15-33:18]: sub
                                  literal [33:16-33:18]: int(20)
                                unary [33:21-33:26]: not
                                  literal [33:22-33:26]: log(true)
                            binary [33:29-33:59]: div
                              unary [33:29-33:35]: not
                                literal [33:30-33:35]: log(false)
                              block [33:38-33:59]
                                name [33:39-33:40]: j
                                  # defined at: [55:40-55:54]
                                literal [33:42-33:46]: str(ha)
                                literal [33:48-33:52]: str(ne)
                                literal [33:54-33:58]: str(da)
                          binary [33:62-33:68]: assign
                            name [33:63-33:64]: x
                              # defined at: [19:19-19:29]
                            literal [33:65-33:67]: int(10)
                        binary [33:71-33:97]: assign
                          binary [33:72-33:77]: sub
                            binary [33:72-33:75]: add
                              name [33:72-33:73]: y
                                # defined at: [19:31-19:40]
                              name [33:74-33:75]: x
                                # defined at: [19:19-19:29]
                            name [33:76-33:77]: z
                              # defined at: [19:42-19:52]
                          binary [33:80-33:96]: sub
                            binary [33:80-33:88]: mul
                              literal [33:80-33:81]: int(5)
                              literal [33:84-33:88]: log(true)
                            literal [33:91-33:96]: log(false)
                  binary [34:11-34:18]: gt
                    name [34:11-34:12]: i
                      # defined at: [55:9-55:22]
                    binary [34:15-34:18]: add
                      name [34:15-34:16]: j
                        # defined at: [55:40-55:54]
                      literal [34:17-34:18]: int(3)
                binary [34:21-34:28]: lt
                  name [34:21-34:22]: j
                    # defined at: [55:40-55:54]
                  binary [34:25-34:28]: sub
                    name [34:25-34:26]: j
                      # defined at: [55:40-55:54]
                    literal [34:27-34:28]: int(2)
              binary [34:31-34:39]: geq
                name [34:31-34:32]: i
                  # defined at: [55:9-55:22]
                binary [34:36-34:39]: mul
                  name [34:36-34:37]: i
                    # defined at: [55:9-55:22]
                  literal [34:38-34:39]: int(3)
            binary [34:43-34:51]: leq
              name [34:43-34:44]: i
                # defined at: [55:9-55:22]
              binary [34:48-34:51]: div
                name [34:48-34:49]: j
                  # defined at: [55:40-55:54]
                literal [34:50-34:51]: int(7)
          binary [34:54-35:75]: and
            binary [34:54-34:72]: and
              binary [34:54-34:66]: and
                binary [34:54-34:60]: neq
                  name [34:54-34:55]: j
                    # defined at: [55:40-55:54]
                  name [34:59-34:60]: j
                    # defined at: [55:40-55:54]
                literal [34:63-34:66]: str(a)
              literal [34:69-34:72]: str(b)
            binary [34:75-35:75]: eq
              binary [34:75-34:84]: div
                literal [34:75-34:78]: str(a)
                literal [34:81-34:84]: str(a)
              binary [34:88-35:75]: add
                binary [34:88-35:65]: sub
                  binary [34:88-35:43]: sub
                    binary [34:88-35:38]: sub
                      binary [34:88-35:33]: sub
                        binary [34:88-35:28]: add
                          binary [34:88-34:99]: add
                            binary [34:88-34:94]: add
                              literal [34:88-34:89]: int(1)
                              literal [34:92-34:94]: int(10)
                            literal [34:97-34:99]: int(20)
                          binary [34:102-35:28]: mul
                            binary [34:102-35:23]: mul
                              binary [34:102-35:18]: mul
                                binary [34:102-35:13]: mul
                                  binary [34:102-34:119]: div
                                    binary [34:102-34:114]: div
                                      binary [34:102-34:109]: div
                                        literal [34:102-34:104]: int(30)
                                        literal [34:107-34:109]: int(40)
                                      literal [34:112-34:114]: int(50)
                                    literal [34:117-34:119]: int(60)
                                  literal [35:11-35:13]: int(10)
                                literal [35:16-35:18]: int(20)
                              literal [35:21-35:23]: int(30)
                            literal [35:26-35:28]: int(40)
                        literal [35:31-35:33]: int(50)
                      literal [35:36-35:38]: int(60)
                    literal [35:41-35:43]: int(80)
                  binary [35:46-35:65]: mod
                    binary [35:46-35:61]: mod
                      binary [35:46-35:57]: mod
                        binary [35:46-35:53]: mod
                          literal [35:46-35:48]: int(90)
                          literal [35:52-35:53]: int(4)
                        literal [35:56-35:57]: int(6)
                      literal [35:60-35:61]: int(7)
                    literal [35:64-35:65]: int(8)
                unary [35:67-35:75]: add
                  unary [35:68-35:75]: add
                    unary [35:69-35:75]: add
                      unary [35:70-35:75]: add
                        unary [35:71-35:75]: add
                          unary [35:72-35:75]: add
                            literal [35:73-35:75]: int(10)
        ifthenelse [37:9-41:10]
          binary [38:16-38:65]: gt
            literal [38:16-38:21]: str(abc)
            binary [38:24-38:65]: add
              binary [38:24-38:59]: add
                binary [38:24-38:54]: sub
                  binary [38:24-38:49]: add
                    binary [38:24-38:34]: sub
                      literal [38:24-38:29]: str(abc)
                      literal [38:32-38:34]: int(10)
                    binary [38:37-38:49]: div
                      binary [38:37-38:44]: mul
                        literal [38:37-38:39]: int(10)
                        literal [38:42-38:44]: int(10)
                      literal [38:47-38:49]: int(10)
                  literal [38:52-38:54]: int(10)
                literal [38:57-38:59]: int(10)
              unary [38:62-38:65]: sub
                literal [38:63-38:65]: int(10)
          call [40:21-40:54]: firstfunction
            # defined at: [19:1-57:2]
            literal [40:35-40:53]: str(danes je lep dan)
        for [43:9-53:10]
          name [44:13-44:14]: i
            # defined at: [55:9-55:22]
          while [45:13-47:14]
            name [46:23-46:24]: j
              # defined at: [55:40-55:54]
            block [46:26-46:34]
              binary [46:27-46:33]: lt
                name [46:27-46:28]: j
                  # defined at: [55:40-55:54]
                literal [46:31-46:33]: int(10)
          ifthenelse [48:17-50:18]
            binary [49:22-49:35]: geq
              binary [49:22-49:28]: mul
                name [49:22-49:23]: a
                  # defined at: [55:24-55:38]
                literal [49:26-49:28]: int(10)
              literal [49:32-49:35]: int(100)
            binary [49:41-49:53]: assign
              name [49:42-49:43]: a
                # defined at: [55:24-55:38]
              binary [49:46-49:52]: sub
                name [49:46-49:47]: a
                  # defined at: [55:24-55:38]
                literal [49:50-49:52]: int(10)
            literal [49:59-49:60]: int(0)
          for [51:21-51:79]
            name [51:27-51:28]: j
              # defined at: [55:40-55:54]
            literal [51:31-51:32]: int(1)
            binary [51:34-51:40]: lt
              name [51:34-51:35]: j
                # defined at: [55:40-55:54]
              literal [51:38-51:40]: int(10)
            binary [51:42-51:49]: assign
              name [51:43-51:44]: j
                # defined at: [55:40-55:54]
              binary [51:45-51:48]: mul
                name [51:45-51:46]: j
                  # defined at: [55:40-55:54]
                literal [51:47-51:48]: int(2)
            call [51:51-51:77]: firstfunction
              # defined at: [19:1-57:2]
              literal [51:65-51:76]: str(blablabla)
          binary [52:25-52:55]: assign
            binary [52:26-52:49]: arr
              binary [52:26-52:39]: arr
                name [52:26-52:27]: a
                  # defined at: [55:24-55:38]
                binary [52:28-52:38]: sub
                  binary [52:28-52:32]: add
                    name [52:28-52:29]: i
                      # defined at: [55:9-55:22]
                    literal [52:30-52:32]: int(10)
                  binary [52:33-52:38]: mul
                    literal [52:33-52:35]: int(20)
                    literal [52:36-52:38]: int(30)
              binary [52:40-52:48]: sub
                binary [52:40-52:44]: sub
                  name [52:40-52:41]: j
                    # defined at: [55:40-55:54]
                  literal [52:42-52:44]: int(10)
                literal [52:45-52:48]: int(203)
            literal [52:52-52:54]: int(12)
  fundef [59:1-82:2]: partition
    parameter [59:15-59:39]: stevila
      array [59:24-59:39]
        [10]
        atom [59:32-59:39]: int
    parameter [59:41-59:55]: begin
      atom [59:48-59:55]: int
    parameter [59:57-59:69]: end
      atom [59:62-59:69]: int
    atom [59:72-59:79]: int
    where [59:82-82:2]
      defs [78:5-81:19]
        vardef [78:5-78:26]: swaptemp
          atom [78:19-78:26]: int
        vardef [79:5-79:23]: pivot
          atom [79:16-79:23]: int
        vardef [80:5-80:19]: i
          atom [80:12-80:19]: int
        vardef [81:5-81:19]: j
          atom [81:12-81:19]: int
      block [59:82-77:2]
        binary [60:5-60:27]: assign
          name [60:6-60:11]: pivot
            # defined at: [79:5-79:23]
          binary [60:14-60:26]: arr
            name [60:14-60:21]: stevila
              # defined at: [59:15-59:39]
            name [60:22-60:25]: end
              # defined at: [59:57-59:69]
        binary [61:5-61:22]: assign
          name [61:6-61:7]: i
            # defined at: [80:5-80:19]
          block [61:10-61:21]
            binary [61:11-61:20]: sub
              name [61:11-61:16]: begin
                # defined at: [59:41-59:55]
              literal [61:19-61:20]: int(1)
        for [63:5-70:6]
          name [63:11-63:12]: j
            # defined at: [81:5-81:19]
          name [63:15-63:20]: begin
            # defined at: [59:41-59:55]
          binary [63:22-63:29]: lt
            name [63:22-63:23]: j
              # defined at: [81:5-81:19]
            name [63:26-63:29]: end
              # defined at: [59:57-59:69]
          binary [63:31-63:42]: assign
            name [63:32-63:33]: j
              # defined at: [81:5-81:19]
            binary [63:36-63:41]: add
              name [63:36-63:37]: j
                # defined at: [81:5-81:19]
              literal [63:40-63:41]: int(1)
          ifthenelse [64:9-69:10]
            binary [64:14-64:33]: leq
              binary [64:14-64:24]: arr
                name [64:14-64:21]: stevila
                  # defined at: [59:15-59:39]
                name [64:22-64:23]: j
                  # defined at: [81:5-81:19]
              name [64:28-64:33]: pivot
                # defined at: [79:5-79:23]
            block [65:13-68:37]
              binary [65:14-65:25]: assign
                name [65:15-65:16]: i
                  # defined at: [80:5-80:19]
                binary [65:19-65:24]: add
                  name [65:19-65:20]: i
                    # defined at: [80:5-80:19]
                  literal [65:23-65:24]: int(1)
              binary [66:13-66:36]: assign
                name [66:14-66:22]: swaptemp
                  # defined at: [78:5-78:26]
                binary [66:25-66:35]: arr
                  name [66:25-66:32]: stevila
                    # defined at: [59:15-59:39]
                  name [66:33-66:34]: j
                    # defined at: [81:5-81:19]
              binary [67:13-67:38]: assign
                binary [67:14-67:24]: arr
                  name [67:14-67:21]: stevila
                    # defined at: [59:15-59:39]
                  name [67:22-67:23]: i
                    # defined at: [80:5-80:19]
                binary [67:27-67:37]: arr
                  name [67:27-67:34]: stevila
                    # defined at: [59:15-59:39]
                  name [67:35-67:36]: j
                    # defined at: [81:5-81:19]
              binary [68:13-68:36]: assign
                binary [68:14-68:24]: arr
                  name [68:14-68:21]: stevila
                    # defined at: [59:15-59:39]
                  name [68:22-68:23]: j
                    # defined at: [81:5-81:19]
                name [68:27-68:35]: swaptemp
                  # defined at: [78:5-78:26]
        block [72:5-74:31]
          binary [72:6-72:31]: assign
            name [72:7-72:15]: swaptemp
              # defined at: [78:5-78:26]
            binary [72:18-72:30]: arr
              name [72:18-72:25]: stevila
                # defined at: [59:15-59:39]
              binary [72:26-72:29]: add
                name [72:26-72:27]: i
                  # defined at: [80:5-80:19]
                literal [72:28-72:29]: int(1)
          binary [73:5-73:34]: assign
            binary [73:6-73:18]: arr
              name [73:6-73:13]: stevila
                # defined at: [59:15-59:39]
              binary [73:14-73:17]: add
                name [73:14-73:15]: i
                  # defined at: [80:5-80:19]
                literal [73:16-73:17]: int(1)
            binary [73:21-73:33]: arr
              name [73:21-73:28]: stevila
                # defined at: [59:15-59:39]
              name [73:29-73:32]: end
                # defined at: [59:57-59:69]
          binary [74:5-74:30]: assign
            binary [74:6-74:18]: arr
              name [74:6-74:13]: stevila
                # defined at: [59:15-59:39]
              name [74:14-74:17]: end
                # defined at: [59:57-59:69]
            name [74:21-74:29]: swaptemp
              # defined at: [78:5-78:26]
        block [76:5-76:12]
          binary [76:6-76:11]: add
            name [76:6-76:7]: i
              # defined at: [80:5-80:19]
            literal [76:10-76:11]: int(1)
  fundef [84:1-85:55]: izpis
    parameter [84:11-84:27]: besedilo
      atom [84:21-84:27]: str
    typename [84:30-84:34]: void
      # defined at: [12:1-12:18]
    call [85:5-85:55]: print
      # defined at: [87:1-87:47]
      literal [85:11-85:54]: str(tvoj program je prestal celoten preizkus!)
  fundef [87:1-87:47]: print
    parameter [87:11-87:27]: besedilo
      atom [87:21-87:27]: str
    atom [87:30-87:36]: str
    name [87:39-87:47]: besedilo
      # defined at: [87:11-87:27]
