source -> definitions
definitions -> definition definitions'
definition -> function_definition
function_definition -> fun identifier ( parameters ) : type = expression
parameters -> parameter parameters'
parameter -> identifier : type
type -> integer
parameters -> e
type -> integer
expression -> logical_ior_expression expression'
logical_ior_expression -> logical_and_expression logical_ior_expression'
logical_and_expression -> compare_expression logical_and_expression'
compare_expression -> additive_expression compare_expression'
additive_expression -> multiplicative_expression additive_expression'
multiplicative_expression -> prefix_expression multiplicative_expression'
prefix_expression -> postfix_expression
postfix_expression -> atom_expression postfix_expression'
atom_expression -> identifier atom_expression4
atom_expression4 -> e
postfix_expression' -> e
multiplicative_expression' -> e
additive_expression' -> e
compare_expression' -> e
logical_and_expression' -> e
logical_ior_expression' -> | logical_ior_expression
logical_and_expression -> compare_expression logical_and_expression'
compare_expression -> additive_expression compare_expression'
additive_expression -> multiplicative_expression additive_expression'
multiplicative_expression -> prefix_expression multiplicative_expression'
prefix_expression -> postfix_expression
postfix_expression -> atom_expression postfix_expression'
atom_expression -> identifier atom_expression4
atom_expression4 -> e
postfix_expression' -> e
multiplicative_expression' -> e
additive_expression' -> e
compare_expression' -> e
logical_and_expression2 -> & logical_and_expression
compare_expression -> additive_expression compare_expression'
additive_expression -> multiplicative_expression additive_expression'
multiplicative_expression -> prefix_expression multiplicative_expression'
prefix_expression -> postfix_expression
postfix_expression -> atom_expression postfix_expression'
atom_expression -> identifier atom_expression4
atom_expression4 -> e
postfix_expression' -> e
multiplicative_expression' -> e
additive_expression' -> e
compare_expression' -> == additive_expression
additive_expression -> multiplicative_expression additive_expression'
multiplicative_expression -> prefix_expression multiplicative_expression'
prefix_expression -> postfix_expression
postfix_expression -> atom_expression postfix_expression'
atom_expression -> identifier atom_expression4
atom_expression4 -> e
postfix_expression' -> e
multiplicative_expression' -> e
additive_expression' -> e
logical_and_expression' -> e
logical_ior_expression' -> e
expression' -> e
definitions' -> e
[2:16-2:22]: Expected `EOF`, got `NAPAKA`

