Defs [1:1-46:6]
  TypeDef [1:1-1:17]: prvic
    Atom [1:11-1:17]: STR
  TypeDef [2:1-2:21]: drugic
    Atom [2:14-2:21]: INT
  TypeDef [3:1-3:23]: tretjic
    TypeName [3:15-3:23]: besedilo
  TypeDef [4:1-4:35]: cetrtic
    Array [4:14-4:35]
      [7]
      Array [4:21-4:35]
        [7]
        Atom [4:28-4:35]: LOG
  VarDef [5:1-5:31]: petic
    Array [5:13-5:31]
      [10]
      Atom [5:24-5:31]: INT
  FunDef [7:1-46:6]: prvaFunkcija
    Parameter [7:19-7:31]: prvic
      Atom [7:25-7:31]: STR
    Parameter [7:33-7:47]: drugic
      Atom [7:40-7:47]: INT
    Parameter [7:49-7:71]: cetrtic
      Array [7:57-7:71]
        [7]
        Atom [7:64-7:71]: LOG
    Atom [7:75-7:82]: INT
    Where [8:1-46:6]
      Defs [13:13-45:14]
        FunDef [13:13-45:14]: drugaFunkcija
          Parameter [13:31-13:44]: nekaj
            Atom [13:37-13:44]: INT
          Atom [13:46-13:53]: INT
          Binary [14:13-45:14]: ASSIGN
            IfThenElse [15:17-26:18]
              Name [16:24-16:28]: haha
              IfThenElse [17:21-25:22]
                Name [18:28-18:33]: nekaj
                Binary [18:39-18:55]: ADD
                  Binary [18:39-18:46]: SUB
                    Binary [18:39-18:44]: SUB
                      Binary [18:39-18:42]: ADD
                        Literal [18:39-18:40]: INT(5)
                        Literal [18:41-18:42]: INT(3)
                      Literal [18:43-18:44]: INT(1)
                    Literal [18:45-18:46]: INT(4)
                  Binary [18:47-18:55]: MUL
                    Literal [18:47-18:48]: INT(2)
                    Literal [18:51-18:55]: LOG(true)
                While [19:25-24:26]
                  Binary [20:35-20:71]: GEQ
                    Name [20:35-20:40]: nekaj
                    Binary [20:44-20:71]: ADD
                      Binary [20:44-20:62]: MUL
                        Name [20:44-20:49]: nekaj
                        Block [20:52-20:62]
                          Unary [20:53-20:61]: SUB
                            Literal [20:54-20:61]: INT(5323223)
                      Unary [20:65-20:71]: SUB
                        Literal [20:66-20:71]: INT(44545)
                  For [21:29-23:30]
                    Name [22:37-22:42]: nekaj
                    Literal [22:45-22:46]: INT(1)
                    Binary [22:48-22:65]: GEQ
                      Name [22:48-22:53]: nekaj
                      Unary [22:57-22:65]: SUB
                        Literal [22:58-22:65]: INT(9999999)
                    Binary [22:67-22:85]: SUB
                      Binary [22:67-22:83]: SUB
                        Binary [22:67-22:81]: SUB
                          Binary [22:67-22:79]: SUB
                            Name [22:67-22:77]: nekajnekaj
                            Literal [22:78-22:79]: INT(1)
                          Literal [22:80-22:81]: INT(1)
                        Literal [22:82-22:83]: INT(1)
                      Literal [22:84-22:85]: INT(1)
                    Name [22:86-22:91]: nekaj
            Where [27:19-44:18]
              Defs [30:21-43:22]
                FunDef [30:21-43:22]: epicBubblesort
                  Parameter [30:40-30:60]: polje
                    Array [30:46-30:60]
                      [10]
                      Atom [30:53-30:60]: INT
                  TypeName [30:62-30:66]: void
                  Binary [30:69-43:22]: AND
                    Binary [30:69-30:98]: AND
                      Binary [30:69-30:86]: EQ
                        Name [30:69-30:70]: n
                        Name [30:74-30:86]: dolzinaPolja
                      Binary [30:89-30:98]: EQ
                        Name [30:89-30:93]: temp
                        Literal [30:97-30:98]: INT(0)
                    For [31:21-43:22]
                      Name [32:29-32:30]: i
                      Literal [32:31-32:32]: INT(0)
                      Binary [32:33-32:36]: LT
                        Name [32:33-32:34]: i
                        Name [32:35-32:36]: n
                      Binary [32:37-32:42]: ADD
                        Name [32:37-32:38]: i
                        Literal [32:41-32:42]: INT(1)
                      For [33:25-42:26]
                        Name [34:33-34:34]: j
                        Literal [34:35-34:36]: INT(0)
                        Binary [34:38-34:45]: LT
                          Name [34:38-34:39]: j
                          Block [34:40-34:45]
                            Binary [34:41-34:44]: SUB
                              Name [34:41-34:42]: n
                              Name [34:43-34:44]: i
                        Binary [34:46-34:51]: ADD
                          Name [34:46-34:47]: j
                          Literal [34:50-34:51]: INT(1)
                        IfThenElse [35:29-41:30]
                          Binary [36:36-36:57]: GT
                            Binary [36:36-36:46]: ARR
                              Name [36:36-36:41]: polje
                              Binary [36:42-36:45]: SUB
                                Name [36:42-36:43]: j
                                Literal [36:44-36:45]: INT(1)
                            Binary [36:49-36:57]: ARR
                              Name [36:49-36:54]: polje
                              Name [36:55-36:56]: j
                          Binary [37:37-40:46]: AND
                            Binary [37:37-39:53]: AND
                              Binary [37:37-38:59]: AND
                                Binary [37:37-37:55]: EQ
                                  Name [37:37-37:41]: temp
                                  Binary [37:45-37:55]: ARR
                                    Name [37:45-37:50]: polje
                                    Binary [37:51-37:54]: SUB
                                      Name [37:51-37:52]: j
                                      Literal [37:53-37:54]: INT(1)
                                Binary [38:37-38:59]: EQ
                                  Binary [38:37-38:47]: ARR
                                    Name [38:37-38:42]: polje
                                    Binary [38:43-38:46]: SUB
                                      Name [38:43-38:44]: j
                                      Literal [38:45-38:46]: INT(1)
                                  Binary [38:51-38:59]: ARR
                                    Name [38:51-38:56]: polje
                                    Name [38:57-38:58]: j
                              Binary [39:37-39:53]: EQ
                                Binary [39:37-39:45]: ARR
                                  Name [39:37-39:42]: polje
                                  Name [39:43-39:44]: j
                                Name [39:49-39:53]: temp
                            Name [40:37-40:46]: blablabla
              Name [27:19-27:43]: celotenprogramtideluje69
      Binary [8:1-10:68]: OR
        Binary [8:1-10:19]: OR
          Binary [8:1-9:72]: OR
            Binary [8:1-9:49]: OR
              Binary [8:1-8:23]: AND
                Binary [8:1-8:16]: EQ
                  Binary [8:1-8:10]: SUB
                    Binary [8:1-8:6]: ADD
                      Literal [8:1-8:2]: INT(5)
                      Literal [8:5-8:6]: INT(3)
                    Literal [8:9-8:10]: INT(2)
                  Literal [8:14-8:16]: INT(10)
                Literal [8:19-8:23]: LOG(true)
              Binary [8:26-9:49]: NEQ
                Binary [8:26-8:79]: MOD
                  Binary [8:26-8:69]: MUL
                    Binary [8:26-8:46]: DIV
                      Name [8:26-8:32]: beseda
                      Name [8:35-8:46]: drugabeseda
                    Literal [8:49-8:69]: STR(danesjelepdanaaaaa)
                  Name [8:72-8:79]: cetrtic
                Binary [8:83-9:49]: SUB
                  Binary [8:83-9:41]: ADD
                    Binary [8:83-9:35]: ADD
                      Binary [8:83-9:8]: SUB
                        Binary [8:83-8:97]: SUB
                          Binary [8:83-8:92]: ADD
                            Name [8:83-8:88]: petic
                            Literal [8:91-8:92]: INT(5)
                          Unary [8:95-8:97]: NOT
                            Name [8:96-8:97]: e
                        Block [9:3-9:8]
                          Unary [9:4-9:7]: SUB
                            Literal [9:5-9:7]: INT(10)
                      Binary [9:11-9:35]: DIV
                        Block [9:11-9:22]
                          Unary [9:12-9:21]: ADD
                            Block [9:13-9:21]
                              Unary [9:14-9:20]: ADD
                                Block [9:15-9:20]
                                  Unary [9:16-9:19]: SUB
                                    Literal [9:17-9:19]: INT(10)
                        Block [9:25-9:35]
                          Unary [9:26-9:34]: NOT
                            Name [9:27-9:34]: cetrtic
                    Literal [9:38-9:41]: INT(100)
                  Literal [9:44-9:49]: LOG(false)
            Binary [9:52-9:72]: AND
              Name [9:52-9:57]: nekaj
              Binary [9:60-9:72]: EQ
                Name [9:60-9:65]: nekaj
                Name [9:69-9:72]: bla
          Binary [9:75-10:19]: AND
            Binary [9:75-9:90]: GEQ
              Name [9:75-9:80]: nekaj
              Name [9:84-9:90]: blabla
            Binary [10:1-10:19]: LEQ
              Name [10:1-10:6]: nekaj
              Name [10:10-10:19]: blablabla
        Binary [10:22-10:68]: AND
          Binary [10:22-10:41]: LT
            Binary [10:22-10:35]: ADD
              Name [10:22-10:27]: nekaj
              Name [10:30-10:35]: nekaj
            Name [10:38-10:41]: bla
          Binary [10:44-10:68]: GT
            Binary [10:44-10:57]: SUB
              Name [10:44-10:49]: nekaj
              Name [10:52-10:57]: nekaj
            Name [10:60-10:68]: nekajbla
